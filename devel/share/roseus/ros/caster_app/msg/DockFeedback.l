;; Auto-generated. Do not edit!


(when (boundp 'caster_app::DockFeedback)
  (if (not (find-package "CASTER_APP"))
    (make-package "CASTER_APP"))
  (shadow 'DockFeedback (find-package "CASTER_APP")))
(unless (find-package "CASTER_APP::DOCKFEEDBACK")
  (make-package "CASTER_APP::DOCKFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude DockFeedback.msg.html


(defclass caster_app::DockFeedback
  :super ros::object
  :slots (_dock_feedback ))

(defmethod caster_app::DockFeedback
  (:init
   (&key
    ((:dock_feedback __dock_feedback) "")
    )
   (send-super :init)
   (setq _dock_feedback (string __dock_feedback))
   self)
  (:dock_feedback
   (&optional __dock_feedback)
   (if __dock_feedback (setq _dock_feedback __dock_feedback)) _dock_feedback)
  (:serialization-length
   ()
   (+
    ;; string _dock_feedback
    4 (length _dock_feedback)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _dock_feedback
       (write-long (length _dock_feedback) s) (princ _dock_feedback s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _dock_feedback
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _dock_feedback (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get caster_app::DockFeedback :md5sum-) "b74bedcf617880cfc838cc9c2eaa7a17")
(setf (get caster_app::DockFeedback :datatype-) "caster_app/DockFeedback")
(setf (get caster_app::DockFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
string dock_feedback

")



(provide :caster_app/DockFeedback "b74bedcf617880cfc838cc9c2eaa7a17")


